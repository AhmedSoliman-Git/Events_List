{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { defer, json, useRouteLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useRouteLoaderData('events-loader-data');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"dksmvoLGk+XHu98zLW1SVbxqfV8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: \"Error need to be fixed ðŸ›  !! -- Failed To Fetch\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nexport async function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useRouteLoaderData","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/12-adv-starting-project/frontend/src/components/Events.js"],"sourcesContent":["\nimport { defer, json, useRouteLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const {events} = useRouteLoaderData('events-loader-data');\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\n\nexport default EventsPage;\n\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events') ;\n\n  if(!response.ok) {\n    throw json({ message:\"Error need to be fixed ðŸ›  !! -- Failed To Fetch\" } ,{\n      status : 500\n    })\n  }\n\n  return response ;\n} \n\n\nexport async function loader(){\n  \nreturn defer({\n  events : loadEvents() ,\n})\n\n}\n"],"mappings":";;AACA,SAASA,KAAK,EAAEC,IAAI,EAAEC,kBAAkB,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGT,kBAAkB,CAAC,oBAAoB,CAAC;EACzD,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACN,EAAA,CAPQD,UAAU;EAAA,QACAP,kBAAkB;AAAA;AAAAe,EAAA,GAD5BR,UAAU;AAUnB,eAAeA,UAAU;AAGzB,eAAeS,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAC;IAAkD,CAAC,EAAE;MACxEC,MAAM,EAAG;IACX,CAAC,CAAC;EACJ;EAEA,OAAOJ,QAAQ;AACjB;AAGA,OAAO,eAAeK,MAAMA,CAAA,EAAE;EAE9B,OAAOxB,KAAK,CAAC;IACXW,MAAM,EAAGO,UAAU,CAAC;EACtB,CAAC,CAAC;AAEF;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}