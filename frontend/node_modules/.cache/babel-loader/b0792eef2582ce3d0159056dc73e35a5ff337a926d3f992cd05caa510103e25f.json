{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate('/events');\n  }\n  const mainData = event.then(data => {\n    let importantData = data;\n    mainFunction(importantData);\n  });\n  function mainFunction(data) {\n    console.log(data);\n  }\n  const isSubmitting = useNavigation().state === 'submitting';\n}\n_s(EventForm, \"o1oxqR4sivltA++P/pd+8gzRgv0=\", false, function () {\n  return [useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  let url = \"http://localhost:8080/events\";\n  const method = request.method;\n  const id = params.eventId;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  if (method === \"PATCH\") {\n    url = \"http://localhost:8080/events/\" + id;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    // 422 is in backend here so not common\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Failed to Did the Process ðŸ› \"\n    }, {\n      status: 500\n    });\n  } else return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","json","redirect","classes","EventForm","method","event","_s","navigate","cancelHandler","mainData","then","data","importantData","mainFunction","console","log","isSubmitting","state","_c","action","request","params","url","id","eventId","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, useNavigate, useNavigation, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate('/events');\n  }\n\n\n  const mainData = event.then((data=>{\n    let importantData = data ;\n    mainFunction(importantData) ;\n  }\n))\n\nfunction mainFunction(data){\n  console.log(data)\n}\n\n  \n\n  const isSubmitting = useNavigation().state === 'submitting' ;\n\n\n  \n\n}\n\nexport default EventForm;\n\n\n\nexport async function action({request,params}){\n  let url = \"http://localhost:8080/events\" ;\n  const method = request.method ;\n  const id = params.eventId ;\n\n  const data = await request.formData();\n  \n  const eventData = {\n      title : data.get('title'),\n      image : data.get('image'),\n      date : data.get('date'),\n      description : data.get('description')\n  } ;\n\n\n\n  if(method === \"PATCH\") {\n    url = \"http://localhost:8080/events/\"+ id ;\n  }\n  const response = await fetch(url , {\n    method : method ,\n    headers : {\n      'Content-Type' : 'application/json'\n    } ,\n    body : JSON.stringify(eventData)\n  })\n\n  if(response.status === 422){ // 422 is in backend here so not common\n    return response ;\n  }\n\n  if(!response.ok) {\n    throw json({message: \"Failed to Did the Process ðŸ› \"},{\n        status : 500\n    })\n} else return redirect(\"/events\")\n\n}\n\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,aAAa,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,OAAO,MAAM,wBAAwB;AAE5C,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,SAASU,aAAaA,CAAA,EAAG;IACvBD,QAAQ,CAAC,SAAS,CAAC;EACrB;EAGA,MAAME,QAAQ,GAAGJ,KAAK,CAACK,IAAI,CAAEC,IAAI,IAAE;IACjC,IAAIC,aAAa,GAAGD,IAAI;IACxBE,YAAY,CAACD,aAAa,CAAC;EAC7B,CACD,CAAC;EAEF,SAASC,YAAYA,CAACF,IAAI,EAAC;IACzBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB;EAIE,MAAMK,YAAY,GAAGjB,aAAa,CAAC,CAAC,CAACkB,KAAK,KAAK,YAAY;AAK7D;AAACX,EAAA,CAxBQH,SAAS;EAAA,QACCL,WAAW,EAkBPC,aAAa;AAAA;AAAAmB,EAAA,GAnB3Bf,SAAS;AA0BlB,eAAeA,SAAS;AAIxB,OAAO,eAAegB,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC5C,IAAIC,GAAG,GAAG,8BAA8B;EACxC,MAAMlB,MAAM,GAAGgB,OAAO,CAAChB,MAAM;EAC7B,MAAMmB,EAAE,GAAGF,MAAM,CAACG,OAAO;EAEzB,MAAMb,IAAI,GAAG,MAAMS,OAAO,CAACK,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAGhB,IAAI,CAACiB,GAAG,CAAC,OAAO,CAAC;IACzBC,KAAK,EAAGlB,IAAI,CAACiB,GAAG,CAAC,OAAO,CAAC;IACzBE,IAAI,EAAGnB,IAAI,CAACiB,GAAG,CAAC,MAAM,CAAC;IACvBG,WAAW,EAAGpB,IAAI,CAACiB,GAAG,CAAC,aAAa;EACxC,CAAC;EAID,IAAGxB,MAAM,KAAK,OAAO,EAAE;IACrBkB,GAAG,GAAG,+BAA+B,GAAEC,EAAE;EAC3C;EACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAG;IACjClB,MAAM,EAAGA,MAAM;IACf8B,OAAO,EAAG;MACR,cAAc,EAAG;IACnB,CAAC;IACDC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACX,SAAS;EACjC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAC;IAAE;IAC3B,OAAON,QAAQ;EACjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAE;IACf,MAAMvC,IAAI,CAAC;MAACwC,OAAO,EAAE;IAA8B,CAAC,EAAC;MACjDF,MAAM,EAAG;IACb,CAAC,CAAC;EACN,CAAC,MAAM,OAAOrC,QAAQ,CAAC,SAAS,CAAC;AAEjC;AAAC,IAAAiB,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}