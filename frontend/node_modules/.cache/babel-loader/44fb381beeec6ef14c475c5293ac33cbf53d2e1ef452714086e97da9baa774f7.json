{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEventPage.jsx\",\n  _s = $RefreshSig$();\nimport { json, useActionData } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  _s();\n  const {\n    event\n  } = useActionData();\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    event: event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n_s(NewEventPage, \"1GkI5I5L/vQZQab9CQNMpNftJXI=\", false, function () {\n  return [useActionData];\n});\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Failed to add A new Item\"\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","useActionData","EventForm","jsxDEV","_jsxDEV","NewEventPage","_s","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/12-adv-starting-project/frontend/src/pages/NewEventPage.jsx"],"sourcesContent":["import { json,useActionData } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nexport default function NewEventPage(){\r\n    const {event} = useActionData();\r\n    return <EventForm event={event}/>\r\n}\r\n\r\n\r\nexport async function action({request , params}){\r\n    \r\n    const data = await request.formData();\r\n    const eventData = {\r\n        title : data.get('title'),\r\n        image : data.get('image'),\r\n        date : data.get('date'),\r\n        description : data.get('description')\r\n    } ;\r\n\r\n    const response = await fetch(\"http://localhost:8080/events\" , {\r\n        method : \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json' \r\n        },\r\n        body:JSON.stringify(eventData) \r\n    })\r\n\r\n    if(!response.ok) {\r\n        throw json({message: \"Failed to add A new Item\"},{\r\n            status : 500\r\n        })\r\n    }\r\n\r\n    return response ;\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAACC,aAAa,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM;IAACC;EAAK,CAAC,GAAGN,aAAa,CAAC,CAAC;EAC/B,oBAAOG,OAAA,CAACF,SAAS;IAACK,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACrC;AAACL,EAAA,CAHuBD,YAAY;EAAA,QAChBJ,aAAa;AAAA;AAAAW,EAAA,GADTP,YAAY;AAMpC,OAAO,eAAeQ,MAAMA,CAAC;EAACC,OAAO;EAAGC;AAAM,CAAC,EAAC;EAE5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAGH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBC,KAAK,EAAGL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBE,IAAI,EAAGN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACvBG,WAAW,EAAGP,IAAI,CAACI,GAAG,CAAC,aAAa;EACxC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAG;IAC1DC,MAAM,EAAG,MAAM;IACfC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACZ,SAAS;EACjC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAE;IACb,MAAM/B,IAAI,CAAC;MAACgC,OAAO,EAAE;IAA0B,CAAC,EAAC;MAC7CC,MAAM,EAAG;IACb,CAAC,CAAC;EACN;EAEA,OAAOT,QAAQ;AACnB;AAAC,IAAAZ,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}