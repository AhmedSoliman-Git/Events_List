{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { defer, json, useRouteLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage({\n  Newevents,\n  giveId\n}) {\n  _s();\n  const {\n    events\n  } = useRouteLoaderData('events-loader-data');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"...Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: giveId ? Newevents : events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"dksmvoLGk+XHu98zLW1SVbxqfV8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: \"Error need to be fixed ðŸ›  !! -- Failed To Fetch\"\n    }, {\n      status: 500\n    });\n  }\n\n  // return response ; //when we using defer we can't return a response ... we make await resonse.json();\n  const resData = await response.json();\n  return resData.events;\n}\nexport async function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","defer","json","useRouteLoaderData","Await","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","Newevents","giveId","_s","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/12-adv-starting-project/frontend/src/components/Events.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { defer, json, useRouteLoaderData, Await } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage({Newevents,giveId}) {\n  const {events} = useRouteLoaderData('events-loader-data');\n  return (\n    <>\n    <Suspense fallback = {<p style={{textAlign:\"center\"}}>...Loading</p>}>\n      <Await resolve={giveId ? Newevents : events} >\n        {(loadedEvents)=> <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n    </>\n  );\n}\n\n\n            export default EventsPage;\n\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events') ;\n\n  if(!response.ok) {\n    throw json({ message:\"Error need to be fixed ðŸ›  !! -- Failed To Fetch\" } ,{\n      status : 500\n    })\n  }\n\n  // return response ; //when we using defer we can't return a response ... we make await resonse.json();\n  const resData = await response.json();\n  return resData.events ;\n} \n\n\nexport async function loader(){\n  \nreturn defer({ \n  events : loadEvents() ,\n})}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,IAAI,EAAEC,kBAAkB,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAC;EAACC,SAAS;EAACC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM;IAACC;EAAM,CAAC,GAAGX,kBAAkB,CAAC,oBAAoB,CAAC;EACzD,oBACEI,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA,CAACP,QAAQ;MAACgB,QAAQ,eAAIT,OAAA;QAAGU,KAAK,EAAE;UAACC,SAAS,EAAC;QAAQ,CAAE;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;MAAAP,QAAA,eACnER,OAAA,CAACH,KAAK;QAACmB,OAAO,EAAEX,MAAM,GAAGD,SAAS,GAAGG,MAAO;QAAAC,QAAA,EACxCS,YAAY,iBAAIjB,OAAA,CAACF,UAAU;UAACS,MAAM,EAAEU;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACT,CAAC;AAEP;AAACT,EAAA,CAXQH,UAAU;EAAA,QACAP,kBAAkB;AAAA;AAAAsB,EAAA,GAD5Bf,UAAU;AAcP,eAAeA,UAAU;AAGrC,eAAegB,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;IACf,MAAM3B,IAAI,CAAC;MAAE4B,OAAO,EAAC;IAAkD,CAAC,EAAE;MACxEC,MAAM,EAAG;IACX,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACzB,IAAI,CAAC,CAAC;EACrC,OAAO8B,OAAO,CAAClB,MAAM;AACvB;AAGA,OAAO,eAAemB,MAAMA,CAAA,EAAE;EAE9B,OAAOhC,KAAK,CAAC;IACXa,MAAM,EAAGY,UAAU,CAAC;EACtB,CAAC,CAAC;AAAA;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}